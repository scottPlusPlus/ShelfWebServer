// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package main

import (
	"encoding/json"
	"fmt"
)

type TableKeyValueRepo struct {
	Data          map[string]map[string]string
	GenerateNewID func(map[string]string) string `json:",omitempty"`
}

func NewTableKeyValueRepo() TableKeyValueRepo {
	r := TableKeyValueRepo{
		Data: make(map[string]map[string]string),
	}
	r.GenerateNewID = r.generateNewItemKey
	return r
}

func (repo TableKeyValueRepo) set(tableKey string, itemKey string, value string) {
	table := repo.getTable(tableKey)
	table[itemKey] = value
}

func (repo TableKeyValueRepo) append(tableKey string, value string) {
	table := repo.getTable(tableKey)
	newItemKey := repo.GenerateNewID(table)
	repo.set(tableKey, newItemKey, value)
}

func (repo TableKeyValueRepo) get(tableKey string, itemKey string) (string, error) {
	table, ok := repo.Data[tableKey]
	if !ok {
		return "", fmt.Errorf("Do not have a table for %v", tableKey)
	}
	item, ok := table[itemKey]
	if !ok {
		return "", fmt.Errorf("No item in %v with index %v", tableKey, itemKey)
	}
	return item, nil
}

func (repo TableKeyValueRepo) getAll(tableKey string) (map[string]string, error) {
	tbl, ok := repo.Data[tableKey]
	if !ok {
		return nil, fmt.Errorf("Do not have a table for %v", tableKey)
	}
	return tbl, nil
}

func (repo TableKeyValueRepo) getTable(tableKey string) map[string]string {
	tbl, ok := repo.Data[tableKey]
	if !ok {
		tbl = repo.newTable()
		repo.Data[tableKey] = tbl
	}
	return tbl
}

func (repo TableKeyValueRepo) tables() []string {
	keys := make([]string, len(repo.Data))
	i := 0
	for k := range repo.Data {
		keys[i] = k
		i++
	}
	return keys
}

func (repo TableKeyValueRepo) generateNewItemKey(table map[string]string) string {
	i := 1
	for i = 1; i > 0; i++ {
		_, ok := table[fmt.Sprintf("%v", i)]
		if !ok {
			break
		}
	}
	return fmt.Sprintf("%v", i)
}

func (repo TableKeyValueRepo) newTable() map[string]string {
	return make(map[string]string)
}

func (repo TableKeyValueRepo) String() string {
	return fmt.Sprintf("%v", repo.Data)
}

func (repo TableKeyValueRepo) MarshalJSON() ([]byte, error) {
	return json.Marshal(repo.Data)
}
